apiVersion: apps/v1
kind: Deployment
metadata:
  name: upc-resolver-api
  namespace: upc-resolver
  labels:
    app: upc-resolver-api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: upc-resolver-api
  template:
    metadata:
      labels:
        app: upc-resolver-api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: upc-resolver-api
        image: upc-resolver:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: upc-resolver-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: upc-resolver-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: JWT_SECRET
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: STRIPE_SECRET_KEY
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: STRIPE_WEBHOOK_SECRET
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: upc-resolver-config
              key: AWS_REGION
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: upc-resolver-config
              key: S3_BUCKET_NAME
        - name: FRONTEND_URL
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: FRONTEND_URL
        - name: BACKEND_URL
          valueFrom:
            secretKeyRef:
              name: upc-resolver-secrets
              key: BACKEND_URL
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
      serviceAccountName: upc-resolver-service-account